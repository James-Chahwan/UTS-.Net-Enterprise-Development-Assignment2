   @model BlueConsultingManagementSystem.Models.Expense
     
    @{
        ViewBag.Title = "Create";
    }
     
    <h2>Create</h2>
     
     
    @using (Html.BeginForm("Create", "Expense", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
       
        @Html.AntiForgeryToken()
  
        <div class="form-horizontal">
            <h4>Add a new Expense...</h4>
            <hr />
            @Html.ValidationSummary(true)
     
            <div class="form-group">
                @Html.LabelFor(model => model.Description,"Description:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
     
            <div class="form-group">
                @Html.LabelFor(model => model.Location,"Location:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location)
                    @Html.ValidationMessageFor(model => model.Location)
                </div>
            </div>
     
            <div class="form-group">
                @Html.LabelFor(model => model.Amount,"Amount:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount)
                    @Html.ValidationMessageFor(model => model.Amount)
                </div>
            </div>
     
            <div class="form-group">
                @Html.LabelFor(model => model.CType, "Currency:",new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CType, new[]{
               new SelectListItem {Text = "AUD", Value = "AUD"},
               new SelectListItem {Text = "CNY", Value = "CNY"},
               new SelectListItem {Text = "EUR", Value = "EUR"}})
                </div>
            </div>
     
            <div class="form-group">
                @Html.LabelFor(model => model.DateOfExpense,"Date of Expense:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfExpense)
                    @Html.ValidationMessageFor(model => model.DateOfExpense)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PDFFile,"Upload PDF:", new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="PdfUpload" name="PdfUpload" value=" plz upload" class="btn btn-default"/>
                    @Html.ValidationMessageFor(model => model.PDFFile)
                </div>
     
            </div>
     
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
     
    <div>
       @Html.ActionLink("Back to Report", "Details", "Report", new { id = @Session["ReportID"] }, null) 
    </div>
     
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
